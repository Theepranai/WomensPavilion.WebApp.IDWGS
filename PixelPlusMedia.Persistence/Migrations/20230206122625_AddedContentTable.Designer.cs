// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PixelPlusMedia.Persistence;

#nullable disable

namespace PixelPlusMedia.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230206122625_AddedContentTable")]
    partial class AddedContentTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PixelPlusMedia.Domain.Entities.Content", b =>
                {
                    b.Property<Guid>("ContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CampaignMessage")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("text");

                    b.Property<string>("ThankyouMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tnc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WelcomeMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ContentId");

                    b.ToTable("Content");
                });

            modelBuilder.Entity("PixelPlusMedia.Domain.Entities.SubMessage", b =>
                {
                    b.Property<Guid>("SubMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SubMessageId");

                    b.HasIndex("ContentId");

                    b.ToTable("SubMessage");
                });

            modelBuilder.Entity("PixelPlusMedia.Domain.Entities.UserDetail", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefaultMessage")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsApprove")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("UserId");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("PixelPlusMedia.Domain.Entities.SubMessage", b =>
                {
                    b.HasOne("PixelPlusMedia.Domain.Entities.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");
                });
#pragma warning restore 612, 618
        }
    }
}
